<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:xcwt="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
    xmlns:themes1="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit">
    <Style TargetType="{x:Type TreeViewItem}" x:Key="TrvItems">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate TargetType="{x:Type xcwt:ButtonSpinner}" x:Key="SpinnerTemplate">
        <Border
            x:Name="Border"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="firstContentColumn" Width="*" />
                    <ColumnDefinition x:Name="secondContentColumn" Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="contentPresenter"
                    Content="{TemplateBinding Content}" Focusable="False"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    Margin="{TemplateBinding Padding}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Grid 
                    x:Name="gridContent"
                    Grid.Column="1"
                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.Visibility>
                        <TemplateBinding Property="ShowButtonSpinner">
                            <TemplateBindingExtension.Converter>
                                <BooleanToVisibilityConverter/>
                            </TemplateBindingExtension.Converter>
                        </TemplateBinding>
                    </Grid.Visibility>
                    <RepeatButton
                        x:Name="PART_IncreaseButton"
                        IsTabStop="{TemplateBinding IsTabStop}">
                        <RepeatButton.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border
                                    x:Name="border"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="0"
                                    Background="Transparent"
                                    SnapsToDevicePixels="True">
                                    <Path
                                        x:Name="icon"
                                        Data="M0,5L4.5,0.5 9,5 6,5 4.5,3.5 3,5z"
                                        Focusable="False"
                                        Fill="Gray"
                                        HorizontalAlignment="Center"
                                        Height="5"
                                        SnapsToDevicePixels="True"
                                        VerticalAlignment="Center"
                                        Width="9"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{DynamicResource CorpColor}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Fill" TargetName="icon"
                                             Value="{DynamicResource CorpColor}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Fill" TargetName="icon"
                                             Value="{x:Null}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </RepeatButton.Template>
                    </RepeatButton>
                    <RepeatButton
                        x:Name="PART_DecreaseButton"
                        IsTabStop="{TemplateBinding IsTabStop}"
                        Grid.Row="1">
                        <RepeatButton.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border
                                    x:Name="border"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="0"
                                    Background="Transparent"
                                    SnapsToDevicePixels="True">
                                    <Path
                                        x:Name="icon"
                                        Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z"
                                        Focusable="False"
                                        Fill="Gray"
                                        HorizontalAlignment="Center"
                                        Height="5"
                                        SnapsToDevicePixels="True"
                                        VerticalAlignment="Center"
                                        Width="9"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{DynamicResource CorpColor}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Fill" TargetName="icon"
                                            Value="{DynamicResource CorpColor}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Fill" TargetName="icon"
                                            Value="{x:Null}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </RepeatButton.Template>
                    </RepeatButton>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter
                    Property="BorderBrush"
                    Value="{DynamicResource {ComponentResourceKey ResourceId=ControlMouseOverBorderKey, TypeInTargetAssembly={x:Type themes1:ResourceKeys}}}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter
                    Property="BorderBrush"
                    Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type themes1:ResourceKeys}}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter
                    Property="Background"
                    Value="{DynamicResource {ComponentResourceKey ResourceId=ControlDisabledBackgroundKey, TypeInTargetAssembly={x:Type themes1:ResourceKeys}}}" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                SourceName="PART_IncreaseButton"
                Value="False">
                <Setter Property="Content" TargetName="PART_IncreaseButton">
                    <Setter.Value>
                        <Path
                            Data="M0,5L4.5,0.5 9,5 6,5 4.5,3.5 3,5z"
                            Focusable="False"
                            Fill="LightGray"
                            HorizontalAlignment="Center"
                            Height="5"
                            SnapsToDevicePixels="True"
                            VerticalAlignment="Center"
                            Width="9" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger
                Property="IsEnabled"
                SourceName="PART_DecreaseButton"
                Value="False">
                <Setter Property="Content" TargetName="PART_DecreaseButton">
                    <Setter.Value>
                        <Path
                            Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z"
                            Focusable="False"
                            Fill="LightGray"
                            HorizontalAlignment="Center"
                            Height="5"
                            SnapsToDevicePixels="True"
                            VerticalAlignment="Center"
                            Width="9" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonSpinnerLocation" Value="Left">
                <Setter Property="Width" TargetName="firstContentColumn" Value="Auto" />
                <Setter Property="Width" TargetName="secondContentColumn" Value="*" />
                <Setter Property="Grid.Column" TargetName="contentPresenter" Value="1" />
                <Setter Property="Grid.Column" TargetName="gridContent" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>